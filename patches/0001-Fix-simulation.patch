From 37c0cd257fe1ce438a50a3fa1ba7c9d3925a0208 Mon Sep 17 00:00:00 2001
From: twodoorcoupe <giorgio.fontanive@outlook.com>
Date: Fri, 9 May 2025 10:27:00 +0200
Subject: [PATCH] Fix simulation

---
 src/cmac_subsystem/cmac_subsystem.sv | 140 ++++++++++----------
 src/open_nic_shell.sv                | 189 +++++----------------------
 src/qdma_subsystem/qdma_subsystem.sv | 130 ------------------
 src/system_config/system_config.sv   |   7 +-
 4 files changed, 110 insertions(+), 356 deletions(-)

diff --git a/src/cmac_subsystem/cmac_subsystem.sv b/src/cmac_subsystem/cmac_subsystem.sv
index d940c29..004e7f2 100644
--- a/src/cmac_subsystem/cmac_subsystem.sv
+++ b/src/cmac_subsystem/cmac_subsystem.sv
@@ -51,7 +51,22 @@ module cmac_subsystem #(
   output         m_axis_cmac_rx_tlast,
   output         m_axis_cmac_rx_tuser_err,
 
-`ifdef __synthesis__
+`ifdef __simulation__
+  output         m_axis_cmac_tx_sim_tvalid,
+  output [511:0] m_axis_cmac_tx_sim_tdata,
+  output  [63:0] m_axis_cmac_tx_sim_tkeep,
+  output         m_axis_cmac_tx_sim_tlast,
+  output         m_axis_cmac_tx_sim_tuser_err,
+  input          m_axis_cmac_tx_sim_tready,
+
+  input          s_axis_cmac_rx_sim_tvalid,
+  input  [511:0] s_axis_cmac_rx_sim_tdata,
+  input   [63:0] s_axis_cmac_rx_sim_tkeep,
+  input          s_axis_cmac_rx_sim_tlast,
+  input          s_axis_cmac_rx_sim_tuser_err,
+
+  output reg     cmac_clk,
+`else
   input    [3:0] gt_rxp,
   input    [3:0] gt_rxn,
   output   [3:0] gt_txp,
@@ -67,21 +82,6 @@ module cmac_subsystem #(
 `endif
 
   output         cmac_clk,
-`else
-  output         m_axis_cmac_tx_sim_tvalid,
-  output [511:0] m_axis_cmac_tx_sim_tdata,
-  output  [63:0] m_axis_cmac_tx_sim_tkeep,
-  output         m_axis_cmac_tx_sim_tlast,
-  output         m_axis_cmac_tx_sim_tuser_err,
-  input          m_axis_cmac_tx_sim_tready,
-
-  input          s_axis_cmac_rx_sim_tvalid,
-  input  [511:0] s_axis_cmac_rx_sim_tdata,
-  input   [63:0] s_axis_cmac_rx_sim_tkeep,
-  input          s_axis_cmac_rx_sim_tlast,
-  input          s_axis_cmac_rx_sim_tuser_err,
-
-  output reg     cmac_clk,
 `endif
 
   input          mod_rstn,
@@ -286,60 +286,7 @@ module cmac_subsystem #(
     .aresetn       (cmac_rstn)
   );
 
-`ifdef __synthesis__
-  cmac_subsystem_cmac_wrapper #(
-    .CMAC_ID (CMAC_ID)
-  ) cmac_wrapper_inst (
-    .gt_rxp              (gt_rxp),
-    .gt_rxn              (gt_rxn),
-    .gt_txp              (gt_txp),
-    .gt_txn              (gt_txn),
-
-`ifdef __au45n__
-    .dual0_gt_ref_clk_p (dual0_gt_ref_clk_p),
-    .dual0_gt_ref_clk_n (dual0_gt_ref_clk_n),
-    .dual1_gt_ref_clk_p (dual1_gt_ref_clk_p),
-    .dual1_gt_ref_clk_n (dual1_gt_ref_clk_n),
-`endif
-
-    .s_axil_awaddr       (axil_cmac_awaddr),
-    .s_axil_awvalid      (axil_cmac_awvalid),
-    .s_axil_awready      (axil_cmac_awready),
-    .s_axil_wdata        (axil_cmac_wdata),
-    .s_axil_wvalid       (axil_cmac_wvalid),
-    .s_axil_wready       (axil_cmac_wready),
-    .s_axil_bresp        (axil_cmac_bresp),
-    .s_axil_bvalid       (axil_cmac_bvalid),
-    .s_axil_bready       (axil_cmac_bready),
-    .s_axil_araddr       (axil_cmac_araddr),
-    .s_axil_arvalid      (axil_cmac_arvalid),
-    .s_axil_arready      (axil_cmac_arready),
-    .s_axil_rdata        (axil_cmac_rdata),
-    .s_axil_rresp        (axil_cmac_rresp),
-    .s_axil_rvalid       (axil_cmac_rvalid),
-    .s_axil_rready       (axil_cmac_rready),
-
-    .s_axis_tx_tvalid    (axis_cmac_tx_tvalid),
-    .s_axis_tx_tdata     (axis_cmac_tx_tdata),
-    .s_axis_tx_tkeep     (axis_cmac_tx_tkeep),
-    .s_axis_tx_tlast     (axis_cmac_tx_tlast),
-    .s_axis_tx_tuser_err (axis_cmac_tx_tuser_err),
-    .s_axis_tx_tready    (axis_cmac_tx_tready),
-
-    .m_axis_rx_tvalid    (axis_cmac_rx_tvalid),
-    .m_axis_rx_tdata     (axis_cmac_rx_tdata),
-    .m_axis_rx_tkeep     (axis_cmac_rx_tkeep),
-    .m_axis_rx_tlast     (axis_cmac_rx_tlast),
-    .m_axis_rx_tuser_err (axis_cmac_rx_tuser_err),
-
-    .gt_refclk_p         (gt_refclk_p),
-    .gt_refclk_n         (gt_refclk_n),
-    .cmac_clk            (cmac_clk),
-    .cmac_sys_reset      (~axil_aresetn),
-
-    .axil_aclk           (axil_aclk)
-  );
-`else // !`ifdef __synthesis__
+`ifdef __simulation__
   generate begin: cmac_sim
     if (CMAC_ID == 0) begin
       initial begin
@@ -397,6 +344,59 @@ module cmac_subsystem #(
   assign axis_cmac_rx_tkeep           = s_axis_cmac_rx_sim_tkeep;
   assign axis_cmac_rx_tlast           = s_axis_cmac_rx_sim_tlast;
   assign axis_cmac_rx_tuser_err       = s_axis_cmac_rx_sim_tuser_err;
+`else // !`ifdef __simulation__
+  cmac_subsystem_cmac_wrapper #(
+    .CMAC_ID (CMAC_ID)
+  ) cmac_wrapper_inst (
+    .gt_rxp              (gt_rxp),
+    .gt_rxn              (gt_rxn),
+    .gt_txp              (gt_txp),
+    .gt_txn              (gt_txn),
+
+`ifdef __au45n__
+    .dual0_gt_ref_clk_p (dual0_gt_ref_clk_p),
+    .dual0_gt_ref_clk_n (dual0_gt_ref_clk_n),
+    .dual1_gt_ref_clk_p (dual1_gt_ref_clk_p),
+    .dual1_gt_ref_clk_n (dual1_gt_ref_clk_n),
+`endif
+
+    .s_axil_awaddr       (axil_cmac_awaddr),
+    .s_axil_awvalid      (axil_cmac_awvalid),
+    .s_axil_awready      (axil_cmac_awready),
+    .s_axil_wdata        (axil_cmac_wdata),
+    .s_axil_wvalid       (axil_cmac_wvalid),
+    .s_axil_wready       (axil_cmac_wready),
+    .s_axil_bresp        (axil_cmac_bresp),
+    .s_axil_bvalid       (axil_cmac_bvalid),
+    .s_axil_bready       (axil_cmac_bready),
+    .s_axil_araddr       (axil_cmac_araddr),
+    .s_axil_arvalid      (axil_cmac_arvalid),
+    .s_axil_arready      (axil_cmac_arready),
+    .s_axil_rdata        (axil_cmac_rdata),
+    .s_axil_rresp        (axil_cmac_rresp),
+    .s_axil_rvalid       (axil_cmac_rvalid),
+    .s_axil_rready       (axil_cmac_rready),
+
+    .s_axis_tx_tvalid    (axis_cmac_tx_tvalid),
+    .s_axis_tx_tdata     (axis_cmac_tx_tdata),
+    .s_axis_tx_tkeep     (axis_cmac_tx_tkeep),
+    .s_axis_tx_tlast     (axis_cmac_tx_tlast),
+    .s_axis_tx_tuser_err (axis_cmac_tx_tuser_err),
+    .s_axis_tx_tready    (axis_cmac_tx_tready),
+
+    .m_axis_rx_tvalid    (axis_cmac_rx_tvalid),
+    .m_axis_rx_tdata     (axis_cmac_rx_tdata),
+    .m_axis_rx_tkeep     (axis_cmac_rx_tkeep),
+    .m_axis_rx_tlast     (axis_cmac_rx_tlast),
+    .m_axis_rx_tuser_err (axis_cmac_rx_tuser_err),
+
+    .gt_refclk_p         (gt_refclk_p),
+    .gt_refclk_n         (gt_refclk_n),
+    .cmac_clk            (cmac_clk),
+    .cmac_sys_reset      (~axil_aresetn),
+
+    .axil_aclk           (axil_aclk)
+  );
 `endif
 
 endmodule: cmac_subsystem
diff --git a/src/open_nic_shell.sv b/src/open_nic_shell.sv
index 2f67fba..ede6b2d 100644
--- a/src/open_nic_shell.sv
+++ b/src/open_nic_shell.sv
@@ -27,7 +27,6 @@ module open_nic_shell #(
   parameter int    NUM_QDMA        = 1,
   parameter int    NUM_CMAC_PORT   = 1
 ) (
-`ifdef __synthesis__
 
 // Fix the CATTRIP issue for AU280, AU50, AU55C, and AU55N custom flow
 `ifdef __au280__
@@ -79,79 +78,14 @@ module open_nic_shell #(
   input        [NUM_QDMA-1:0] pcie_refclk_n,
   input        [NUM_QDMA-1:0] pcie_rstn,
 
-  input    [4*NUM_CMAC_PORT-1:0] qsfp_rxp,
-  input    [4*NUM_CMAC_PORT-1:0] qsfp_rxn,
-  output   [4*NUM_CMAC_PORT-1:0] qsfp_txp,
-  output   [4*NUM_CMAC_PORT-1:0] qsfp_txn,
-
 `ifdef __au45n__
-  input                          dual0_gt_ref_clk_p,
-  input                          dual0_gt_ref_clk_n,
-  input                          dual1_gt_ref_clk_p,
-  input                          dual1_gt_ref_clk_n,
+  input                       dual0_gt_ref_clk_p,
+  input                       dual0_gt_ref_clk_n,
+  input                       dual1_gt_ref_clk_p,
+  input                       dual1_gt_ref_clk_n,
 `endif
 
-  input      [NUM_CMAC_PORT-1:0] qsfp_refclk_p,
-  input      [NUM_CMAC_PORT-1:0] qsfp_refclk_n
-
-`else // !`ifdef __synthesis__
-  input     [NUM_QDMA-1:0] s_axil_sim_awvalid,
-  input  [32*NUM_QDMA-1:0] s_axil_sim_awaddr,
-  output    [NUM_QDMA-1:0] s_axil_sim_awready,
-  input     [NUM_QDMA-1:0] s_axil_sim_wvalid,
-  input  [32*NUM_QDMA-1:0] s_axil_sim_wdata,
-  output    [NUM_QDMA-1:0] s_axil_sim_wready,
-  output    [NUM_QDMA-1:0] s_axil_sim_bvalid,
-  output  [2*NUM_QDMA-1:0] s_axil_sim_bresp,
-  input     [NUM_QDMA-1:0] s_axil_sim_bready,
-  input     [NUM_QDMA-1:0] s_axil_sim_arvalid,
-  input  [32*NUM_QDMA-1:0] s_axil_sim_araddr,
-  output    [NUM_QDMA-1:0] s_axil_sim_arready,
-  output    [NUM_QDMA-1:0] s_axil_sim_rvalid,
-  output [32*NUM_QDMA-1:0] s_axil_sim_rdata,
-  output  [2*NUM_QDMA-1:0] s_axil_sim_rresp,
-  input     [NUM_QDMA-1:0] s_axil_sim_rready,
-
-  input      [NUM_QDMA-1:0] s_axis_qdma_h2c_sim_tvalid,
-  input  [512*NUM_QDMA-1:0] s_axis_qdma_h2c_sim_tdata,
-  input   [32*NUM_QDMA-1:0] s_axis_qdma_h2c_sim_tcrc,
-  input      [NUM_QDMA-1:0] s_axis_qdma_h2c_sim_tlast,
-  input   [11*NUM_QDMA-1:0] s_axis_qdma_h2c_sim_tuser_qid,
-  input    [3*NUM_QDMA-1:0] s_axis_qdma_h2c_sim_tuser_port_id,
-  input      [NUM_QDMA-1:0] s_axis_qdma_h2c_sim_tuser_err,
-  input   [32*NUM_QDMA-1:0] s_axis_qdma_h2c_sim_tuser_mdata,
-  input    [6*NUM_QDMA-1:0] s_axis_qdma_h2c_sim_tuser_mty,
-  input      [NUM_QDMA-1:0] s_axis_qdma_h2c_sim_tuser_zero_byte,
-  output     [NUM_QDMA-1:0] s_axis_qdma_h2c_sim_tready,
-
-  output     [NUM_QDMA-1:0] m_axis_qdma_c2h_sim_tvalid,
-  output [512*NUM_QDMA-1:0] m_axis_qdma_c2h_sim_tdata,
-  output  [32*NUM_QDMA-1:0] m_axis_qdma_c2h_sim_tcrc,
-  output     [NUM_QDMA-1:0] m_axis_qdma_c2h_sim_tlast,
-  output     [NUM_QDMA-1:0] m_axis_qdma_c2h_sim_ctrl_marker,
-  output   [3*NUM_QDMA-1:0] m_axis_qdma_c2h_sim_ctrl_port_id,
-  output   [7*NUM_QDMA-1:0] m_axis_qdma_c2h_sim_ctrl_ecc,
-  output  [16*NUM_QDMA-1:0] m_axis_qdma_c2h_sim_ctrl_len,
-  output  [11*NUM_QDMA-1:0] m_axis_qdma_c2h_sim_ctrl_qid,
-  output     [NUM_QDMA-1:0] m_axis_qdma_c2h_sim_ctrl_has_cmpt,
-  output   [6*NUM_QDMA-1:0] m_axis_qdma_c2h_sim_mty,
-  input      [NUM_QDMA-1:0] m_axis_qdma_c2h_sim_tready,
-
-  output     [NUM_QDMA-1:0] m_axis_qdma_cpl_sim_tvalid,
-  output [512*NUM_QDMA-1:0] m_axis_qdma_cpl_sim_tdata,
-  output   [2*NUM_QDMA-1:0] m_axis_qdma_cpl_sim_size,
-  output  [16*NUM_QDMA-1:0] m_axis_qdma_cpl_sim_dpar,
-  output  [11*NUM_QDMA-1:0] m_axis_qdma_cpl_sim_ctrl_qid,
-  output   [2*NUM_QDMA-1:0] m_axis_qdma_cpl_sim_ctrl_cmpt_type,
-  output  [16*NUM_QDMA-1:0] m_axis_qdma_cpl_sim_ctrl_wait_pld_pkt_id,
-  output   [3*NUM_QDMA-1:0] m_axis_qdma_cpl_sim_ctrl_port_id,
-  output     [NUM_QDMA-1:0] m_axis_qdma_cpl_sim_ctrl_marker,
-  output     [NUM_QDMA-1:0] m_axis_qdma_cpl_sim_ctrl_user_trig,
-  output   [3*NUM_QDMA-1:0] m_axis_qdma_cpl_sim_ctrl_col_idx,
-  output   [3*NUM_QDMA-1:0] m_axis_qdma_cpl_sim_ctrl_err_idx,
-  output     [NUM_QDMA-1:0] m_axis_qdma_cpl_sim_ctrl_no_wrb_marker,
-  input      [NUM_QDMA-1:0] m_axis_qdma_cpl_sim_tready,
-
+`ifdef __simulation__
   output     [NUM_CMAC_PORT-1:0] m_axis_cmac_tx_sim_tvalid,
   output [512*NUM_CMAC_PORT-1:0] m_axis_cmac_tx_sim_tdata,
   output  [64*NUM_CMAC_PORT-1:0] m_axis_cmac_tx_sim_tkeep,
@@ -163,9 +97,15 @@ module open_nic_shell #(
   input  [512*NUM_CMAC_PORT-1:0] s_axis_cmac_rx_sim_tdata,
   input   [64*NUM_CMAC_PORT-1:0] s_axis_cmac_rx_sim_tkeep,
   input      [NUM_CMAC_PORT-1:0] s_axis_cmac_rx_sim_tlast,
-  input      [NUM_CMAC_PORT-1:0] s_axis_cmac_rx_sim_tuser_err,
+  input      [NUM_CMAC_PORT-1:0] s_axis_cmac_rx_sim_tuser_err
+`else
+  input    [4*NUM_CMAC_PORT-1:0] qsfp_rxp,
+  input    [4*NUM_CMAC_PORT-1:0] qsfp_rxn,
+  output   [4*NUM_CMAC_PORT-1:0] qsfp_txp,
+  output   [4*NUM_CMAC_PORT-1:0] qsfp_txn,
 
-  input  [NUM_QDMA-1:0] powerup_rstn
+  input      [NUM_CMAC_PORT-1:0] qsfp_refclk_p,
+  input      [NUM_CMAC_PORT-1:0] qsfp_refclk_n
 `endif
 );
 
@@ -196,8 +136,6 @@ module open_nic_shell #(
     end
   end
 
-`ifdef __synthesis__
-
   wire [16*NUM_QDMA-1:0] qdma_pcie_rxp;
   wire [16*NUM_QDMA-1:0] qdma_pcie_rxn;
   wire [16*NUM_QDMA-1:0] qdma_pcie_txp;
@@ -253,7 +191,6 @@ module open_nic_shell #(
 
 `ifdef __zynq_family__
   zynq_usplus_ps zynq_usplus_ps_inst ();
-`endif
 `endif
 
   wire       [NUM_QDMA-1:0] axil_qdma_awvalid;
@@ -493,8 +430,8 @@ module open_nic_shell #(
 `else
   assign qdma_pcie_rxp       = pcie_rxp;
   assign qdma_pcie_rxn       = pcie_rxn;
-  assign qdma_pcie_txp       = pcie_txp;
-  assign qdma_pcie_txn       = pcie_txn;
+  assign pcie_txp            = qdma_pcie_txp;
+  assign pcie_txn            = qdma_pcie_txn;
 `endif
 
   system_config #(
@@ -502,7 +439,6 @@ module open_nic_shell #(
     .NUM_QDMA        (NUM_QDMA),
     .NUM_CMAC_PORT   (NUM_CMAC_PORT)
   ) system_config_inst (
-`ifdef __synthesis__
     .s_axil_awvalid      (axil_pcie_awvalid),
     .s_axil_awaddr       (axil_pcie_awaddr),
     .s_axil_awready      (axil_pcie_awready),
@@ -519,24 +455,6 @@ module open_nic_shell #(
     .s_axil_rdata        (axil_pcie_rdata),
     .s_axil_rresp        (axil_pcie_rresp),
     .s_axil_rready       (axil_pcie_rready),
-`else // !`ifdef __synthesis__
-    .s_axil_awvalid      (s_axil_sim_awvalid),
-    .s_axil_awaddr       (s_axil_sim_awaddr),
-    .s_axil_awready      (s_axil_sim_awready),
-    .s_axil_wvalid       (s_axil_sim_wvalid),
-    .s_axil_wdata        (s_axil_sim_wdata),
-    .s_axil_wready       (s_axil_sim_wready),
-    .s_axil_bvalid       (s_axil_sim_bvalid),
-    .s_axil_bresp        (s_axil_sim_bresp),
-    .s_axil_bready       (s_axil_sim_bready),
-    .s_axil_arvalid      (s_axil_sim_arvalid),
-    .s_axil_araddr       (s_axil_sim_araddr),
-    .s_axil_arready      (s_axil_sim_arready),
-    .s_axil_rvalid       (s_axil_sim_rvalid),
-    .s_axil_rdata        (s_axil_sim_rdata),
-    .s_axil_rresp        (s_axil_sim_rresp),
-    .s_axil_rready       (s_axil_sim_rready),
-`endif
 
     .m_axil_qdma_awvalid (axil_qdma_awvalid),
     .m_axil_qdma_awaddr  (axil_qdma_awaddr),
@@ -630,7 +548,10 @@ module open_nic_shell #(
 
     .satellite_uart_0_rxd (satellite_uart_0_rxd),
     .satellite_uart_0_txd (satellite_uart_0_txd),
+
+  `ifndef __simulation__
     .satellite_gpio_0     (satellite_gpio),
+  `endif
 
   `ifdef __au280__
     .hbm_temp_1_0            (7'd0),
@@ -712,7 +633,6 @@ module open_nic_shell #(
       .s_axis_c2h_tuser_dst                 (axis_qdma_c2h_tuser_dst[`getvec(16*NUM_PHYS_FUNC, i)]),
       .s_axis_c2h_tready                    (axis_qdma_c2h_tready[`getvec(NUM_PHYS_FUNC, i)]),
 
-  `ifdef __synthesis__
       .pcie_rxp                             (qdma_pcie_rxp[`getvec(16, i)]),
       .pcie_rxn                             (qdma_pcie_rxn[`getvec(16, i)]),
       .pcie_txp                             (qdma_pcie_txp[`getvec(16, i)]),
@@ -741,47 +661,6 @@ module open_nic_shell #(
       .user_lnk_up                          (pcie_user_lnk_up[i]),
       .phy_ready                            (pcie_phy_ready[i]),
       .powerup_rstn                         (powerup_rstn[i]),
-  `else // !`ifdef __synthesis__
-      .s_axis_qdma_h2c_tvalid               (s_axis_qdma_h2c_sim_tvalid[i]),
-      .s_axis_qdma_h2c_tdata                (s_axis_qdma_h2c_sim_tdata[`getvec(512, i)]),
-      .s_axis_qdma_h2c_tcrc                 (s_axis_qdma_h2c_sim_tcrc[`getvec(32, i)]),
-      .s_axis_qdma_h2c_tlast                (s_axis_qdma_h2c_sim_tlast[i]),
-      .s_axis_qdma_h2c_tuser_qid            (s_axis_qdma_h2c_sim_tuser_qid[`getvec(11, i)]),
-      .s_axis_qdma_h2c_tuser_port_id        (s_axis_qdma_h2c_sim_tuser_port_id[`getvec(3, i)]),
-      .s_axis_qdma_h2c_tuser_err            (s_axis_qdma_h2c_sim_tuser_err[i]),
-      .s_axis_qdma_h2c_tuser_mdata          (s_axis_qdma_h2c_sim_tuser_mdata[`getvec(32, i)]),
-      .s_axis_qdma_h2c_tuser_mty            (s_axis_qdma_h2c_sim_tuser_mty[`getvec(6, i)]),
-      .s_axis_qdma_h2c_tuser_zero_byte      (s_axis_qdma_h2c_sim_tuser_zero_byte[i]),
-      .s_axis_qdma_h2c_tready               (s_axis_qdma_h2c_sim_tready[i]),
-
-      .m_axis_qdma_c2h_tvalid               (m_axis_qdma_c2h_sim_tvalid[i]),
-      .m_axis_qdma_c2h_tdata                (m_axis_qdma_c2h_sim_tdata[`getvec(512, i)]),
-      .m_axis_qdma_c2h_tcrc                 (m_axis_qdma_c2h_sim_tcrc[`getvec(32, i)]),
-      .m_axis_qdma_c2h_tlast                (m_axis_qdma_c2h_sim_tlast[i]),
-      .m_axis_qdma_c2h_ctrl_marker          (m_axis_qdma_c2h_sim_ctrl_marker[i]),
-      .m_axis_qdma_c2h_ctrl_port_id         (m_axis_qdma_c2h_sim_ctrl_port_id[`getvec(3, i)]),
-      .m_axis_qdma_c2h_ctrl_ecc             (m_axis_qdma_c2h_sim_ctrl_ecc[`getvec(7, i)]),
-      .m_axis_qdma_c2h_ctrl_len             (m_axis_qdma_c2h_sim_ctrl_len[`getvec(16, i)]),
-      .m_axis_qdma_c2h_ctrl_qid             (m_axis_qdma_c2h_sim_ctrl_qid[`getvec(11, i)]),
-      .m_axis_qdma_c2h_ctrl_has_cmpt        (m_axis_qdma_c2h_sim_ctrl_has_cmpt[i]),
-      .m_axis_qdma_c2h_mty                  (m_axis_qdma_c2h_sim_mty[`getvec(6, i)]),
-      .m_axis_qdma_c2h_tready               (m_axis_qdma_c2h_sim_tready[i]),
-
-      .m_axis_qdma_cpl_tvalid               (m_axis_qdma_cpl_sim_tvalid[i]),
-      .m_axis_qdma_cpl_tdata                (m_axis_qdma_cpl_sim_tdata[`getvec(512, i)]),
-      .m_axis_qdma_cpl_size                 (m_axis_qdma_cpl_sim_size[`getvec(2, i)]),
-      .m_axis_qdma_cpl_dpar                 (m_axis_qdma_cpl_sim_dpar[`getvec(16, i)]),
-      .m_axis_qdma_cpl_ctrl_qid             (m_axis_qdma_cpl_sim_ctrl_qid[`getvec(11, i)]),
-      .m_axis_qdma_cpl_ctrl_cmpt_type       (m_axis_qdma_cpl_sim_ctrl_cmpt_type[`getvec(2, i)]),
-      .m_axis_qdma_cpl_ctrl_wait_pld_pkt_id (m_axis_qdma_cpl_sim_ctrl_wait_pld_pkt_id[`getvec(16, i)]),
-      .m_axis_qdma_cpl_ctrl_port_id         (m_axis_qdma_cpl_sim_ctrl_port_id[`getvec(3, i)]),
-      .m_axis_qdma_cpl_ctrl_marker          (m_axis_qdma_cpl_sim_ctrl_marker[i]),
-      .m_axis_qdma_cpl_ctrl_user_trig       (m_axis_qdma_cpl_sim_ctrl_user_trig[i]),
-      .m_axis_qdma_cpl_ctrl_col_idx         (m_axis_qdma_cpl_sim_ctrl_col_idx[`getvec(3, i)]),
-      .m_axis_qdma_cpl_ctrl_err_idx         (m_axis_qdma_cpl_sim_ctrl_err_idx[`getvec(3, i)]),
-      .m_axis_qdma_cpl_ctrl_no_wrb_marker   (m_axis_qdma_cpl_sim_ctrl_no_wrb_marker[i]),
-      .m_axis_qdma_cpl_tready               (m_axis_qdma_cpl_sim_tready[i]),
-  `endif
 
       .mod_rstn                             (qdma_rstn[i]),
       .mod_rst_done                         (qdma_rst_done[i]),
@@ -901,7 +780,22 @@ module open_nic_shell #(
       .m_axis_cmac_rx_tlast         (axis_cmac_rx_tlast[i]),
       .m_axis_cmac_rx_tuser_err     (axis_cmac_rx_tuser_err[i]),
 
-`ifdef __synthesis__
+`ifdef __simulation__
+      .m_axis_cmac_tx_sim_tvalid    (m_axis_cmac_tx_sim_tvalid[i]),
+      .m_axis_cmac_tx_sim_tdata     (m_axis_cmac_tx_sim_tdata[`getvec(512, i)]),
+      .m_axis_cmac_tx_sim_tkeep     (m_axis_cmac_tx_sim_tkeep[`getvec(64, i)]),
+      .m_axis_cmac_tx_sim_tlast     (m_axis_cmac_tx_sim_tlast[i]),
+      .m_axis_cmac_tx_sim_tuser_err (m_axis_cmac_tx_sim_tuser_err[i]),
+      .m_axis_cmac_tx_sim_tready    (m_axis_cmac_tx_sim_tready[i]),
+
+      .s_axis_cmac_rx_sim_tvalid    (s_axis_cmac_rx_sim_tvalid[i]),
+      .s_axis_cmac_rx_sim_tdata     (s_axis_cmac_rx_sim_tdata[`getvec(512, i)]),
+      .s_axis_cmac_rx_sim_tkeep     (s_axis_cmac_rx_sim_tkeep[`getvec(64, i)]),
+      .s_axis_cmac_rx_sim_tlast     (s_axis_cmac_rx_sim_tlast[i]),
+      .s_axis_cmac_rx_sim_tuser_err (s_axis_cmac_rx_sim_tuser_err[i]),
+
+      .cmac_clk                     (cmac_clk[i]),
+`else
       .gt_rxp                       (qsfp_rxp[`getvec(4, i)]),
       .gt_rxn                       (qsfp_rxn[`getvec(4, i)]),
       .gt_txp                       (qsfp_txp[`getvec(4, i)]),
@@ -916,21 +810,6 @@ module open_nic_shell #(
       .dual1_gt_ref_clk_n           (dual1_gt_ref_clk_n),
 `endif
 
-      .cmac_clk                     (cmac_clk[i]),
-`else
-      .m_axis_cmac_tx_sim_tvalid    (m_axis_cmac_tx_sim_tvalid[i]),
-      .m_axis_cmac_tx_sim_tdata     (m_axis_cmac_tx_sim_tdata[`getvec(512, i)]),
-      .m_axis_cmac_tx_sim_tkeep     (m_axis_cmac_tx_sim_tkeep[`getvec(64, i)]),
-      .m_axis_cmac_tx_sim_tlast     (m_axis_cmac_tx_sim_tlast[i]),
-      .m_axis_cmac_tx_sim_tuser_err (m_axis_cmac_tx_sim_tuser_err[i]),
-      .m_axis_cmac_tx_sim_tready    (m_axis_cmac_tx_sim_tready[i]),
-
-      .s_axis_cmac_rx_sim_tvalid    (s_axis_cmac_rx_sim_tvalid[i]),
-      .s_axis_cmac_rx_sim_tdata     (s_axis_cmac_rx_sim_tdata[`getvec(512, i)]),
-      .s_axis_cmac_rx_sim_tkeep     (s_axis_cmac_rx_sim_tkeep[`getvec(64, i)]),
-      .s_axis_cmac_rx_sim_tlast     (s_axis_cmac_rx_sim_tlast[i]),
-      .s_axis_cmac_rx_sim_tuser_err (s_axis_cmac_rx_sim_tuser_err[i]),
-
       .cmac_clk                     (cmac_clk[i]),
 `endif
 
diff --git a/src/qdma_subsystem/qdma_subsystem.sv b/src/qdma_subsystem/qdma_subsystem.sv
index 2242547..8e2a4a0 100644
--- a/src/qdma_subsystem/qdma_subsystem.sv
+++ b/src/qdma_subsystem/qdma_subsystem.sv
@@ -60,7 +60,6 @@ module qdma_subsystem #(
   input   [16*NUM_PHYS_FUNC-1:0] s_axis_c2h_tuser_dst,
   output     [NUM_PHYS_FUNC-1:0] s_axis_c2h_tready,
 
-`ifdef __synthesis__
   input                   [15:0] pcie_rxp,
   input                   [15:0] pcie_rxn,
   output                  [15:0] pcie_txp,
@@ -94,54 +93,12 @@ module qdma_subsystem #(
   // routed into the `system_config` submodule to generate proper reset signals
   // for each submodule.
   output                         powerup_rstn,
-`else // !`ifdef __synthesis__
-  input                          s_axis_qdma_h2c_tvalid,
-  input                  [511:0] s_axis_qdma_h2c_tdata,
-  input                   [31:0] s_axis_qdma_h2c_tcrc,
-  input                          s_axis_qdma_h2c_tlast,
-  input                   [10:0] s_axis_qdma_h2c_tuser_qid,
-  input                    [2:0] s_axis_qdma_h2c_tuser_port_id,
-  input                          s_axis_qdma_h2c_tuser_err,
-  input                   [31:0] s_axis_qdma_h2c_tuser_mdata,
-  input                    [5:0] s_axis_qdma_h2c_tuser_mty,
-  input                          s_axis_qdma_h2c_tuser_zero_byte,
-  output                         s_axis_qdma_h2c_tready,
-
-  output                         m_axis_qdma_c2h_tvalid,
-  output                 [511:0] m_axis_qdma_c2h_tdata,
-  output                  [31:0] m_axis_qdma_c2h_tcrc,
-  output                         m_axis_qdma_c2h_tlast,
-  output                         m_axis_qdma_c2h_ctrl_marker,
-  output                   [2:0] m_axis_qdma_c2h_ctrl_port_id,
-  output                   [6:0] m_axis_qdma_c2h_ctrl_ecc,
-  output                  [15:0] m_axis_qdma_c2h_ctrl_len,
-  output                  [10:0] m_axis_qdma_c2h_ctrl_qid,
-  output                         m_axis_qdma_c2h_ctrl_has_cmpt,
-  output                   [5:0] m_axis_qdma_c2h_mty,
-  input                          m_axis_qdma_c2h_tready,
-
-  output                         m_axis_qdma_cpl_tvalid,
-  output                 [511:0] m_axis_qdma_cpl_tdata,
-  output                   [1:0] m_axis_qdma_cpl_size,
-  output                  [15:0] m_axis_qdma_cpl_dpar,
-  output                  [10:0] m_axis_qdma_cpl_ctrl_qid,
-  output                   [1:0] m_axis_qdma_cpl_ctrl_cmpt_type,
-  output                  [15:0] m_axis_qdma_cpl_ctrl_wait_pld_pkt_id,
-  output                   [2:0] m_axis_qdma_cpl_ctrl_port_id,
-  output                         m_axis_qdma_cpl_ctrl_marker,
-  output                         m_axis_qdma_cpl_ctrl_user_trig,
-  output                   [2:0] m_axis_qdma_cpl_ctrl_col_idx,
-  output                   [2:0] m_axis_qdma_cpl_ctrl_err_idx,
-  output                         m_axis_qdma_cpl_ctrl_no_wrb_marker,
-  input                          m_axis_qdma_cpl_tready,
-`endif
 
   input                          mod_rstn,
   output                         mod_rst_done,
 
   input                          axil_cfg_aclk,
 
-`ifdef __synthesis__
   output                         axil_aclk,
 
 `ifdef __au55n__
@@ -155,23 +112,6 @@ module qdma_subsystem #(
 `endif
   input                          axis_master_aclk,
   output                         axis_aclk
-
-`else // !`ifdef __synthesis__
-  output reg                     axil_aclk,
-
-`ifdef __au55n__
-  output reg                     ref_clk_100mhz,
-`elsif __au55c__
-  output reg                     ref_clk_100mhz,
-`elsif __au50__
-  output reg                     ref_clk_100mhz,
-`elsif __au280__
-  output reg                     ref_clk_100mhz,
-`endif
-  input reg                      axis_master_aclk,
-  output reg                     axis_aclk
-
-`endif
 );
 
   wire         axis_qdma_h2c_tvalid;
@@ -276,7 +216,6 @@ module qdma_subsystem #(
     .rstn         (axil_aresetn)
   );
 
-`ifdef __synthesis__
   wire         pcie_refclk_gt;
   wire         pcie_refclk;
 
@@ -449,75 +388,6 @@ module qdma_subsystem #(
 
     .aresetn                         (powerup_rstn)
   );
-`else // !`ifdef __synthesis__
-  initial begin
-    axil_aclk = 1'b1;
-    axis_aclk = 1'b1;
-  
-`ifdef __au55n__
-    ref_clk_100mhz = 1'b1;
-`elsif __au55c__
-    ref_clk_100mhz = 1'b1;
-`elsif __au50__
-    ref_clk_100mhz = 1'b1;
-`elsif __au280__
-    ref_clk_100mhz = 1'b1;
-`endif
-  end
-
-  always #4000ps axil_aclk = ~axil_aclk;
-  always #2000ps axis_aclk = ~axis_aclk;
-
-`ifdef __au55n__
-  always #5000ps ref_clk_100mhz = ~ref_clk_100mhz;
-`elsif __au55c__
-  always #5000ps ref_clk_100mhz = ~ref_clk_100mhz;
-`elsif __au50__
-  always #5000ps ref_clk_100mhz = ~ref_clk_100mhz;
-`elsif __au280__
-  always #5000ps ref_clk_100mhz = ~ref_clk_100mhz;
-`endif
-
-  assign axis_qdma_h2c_tvalid                 = s_axis_qdma_h2c_tvalid;
-  assign axis_qdma_h2c_tdata                  = s_axis_qdma_h2c_tdata;
-  assign axis_qdma_h2c_tcrc                   = s_axis_qdma_h2c_tcrc;
-  assign axis_qdma_h2c_tlast                  = s_axis_qdma_h2c_tlast;
-  assign axis_qdma_h2c_tuser_qid              = s_axis_qdma_h2c_tuser_qid;
-  assign axis_qdma_h2c_tuser_port_id          = s_axis_qdma_h2c_tuser_port_id;
-  assign axis_qdma_h2c_tuser_err              = s_axis_qdma_h2c_tuser_err;
-  assign axis_qdma_h2c_tuser_mdata            = s_axis_qdma_h2c_tuser_mdata;
-  assign axis_qdma_h2c_tuser_mty              = s_axis_qdma_h2c_tuser_mty;
-  assign axis_qdma_h2c_tuser_zero_byte        = s_axis_qdma_h2c_tuser_zero_byte;
-  assign s_axis_qdma_h2c_tready               = axis_qdma_h2c_tready;
-
-  assign m_axis_qdma_c2h_tvalid               = axis_qdma_c2h_tvalid;
-  assign m_axis_qdma_c2h_tdata                = axis_qdma_c2h_tdata;
-  assign m_axis_qdma_c2h_tcrc                 = axis_qdma_c2h_tcrc;
-  assign m_axis_qdma_c2h_tlast                = axis_qdma_c2h_tlast;
-  assign m_axis_qdma_c2h_ctrl_marker          = axis_qdma_c2h_ctrl_marker;
-  assign m_axis_qdma_c2h_ctrl_port_id         = axis_qdma_c2h_ctrl_port_id;
-  assign m_axis_qdma_c2h_ctrl_ecc             = axis_qdma_c2h_ctrl_ecc;
-  assign m_axis_qdma_c2h_ctrl_len             = axis_qdma_c2h_ctrl_len;
-  assign m_axis_qdma_c2h_ctrl_qid             = axis_qdma_c2h_ctrl_qid;
-  assign m_axis_qdma_c2h_ctrl_has_cmpt        = axis_qdma_c2h_ctrl_has_cmpt;
-  assign m_axis_qdma_c2h_mty                  = axis_qdma_c2h_mty;
-  assign axis_qdma_c2h_tready                 = m_axis_qdma_c2h_tready;
-
-  assign m_axis_qdma_cpl_tvalid               = axis_qdma_cpl_tvalid;
-  assign m_axis_qdma_cpl_tdata                = axis_qdma_cpl_tdata;
-  assign m_axis_qdma_cpl_size                 = axis_qdma_cpl_size;
-  assign m_axis_qdma_cpl_dpar                 = axis_qdma_cpl_dpar;
-  assign m_axis_qdma_cpl_ctrl_qid             = axis_qdma_cpl_ctrl_qid;
-  assign m_axis_qdma_cpl_ctrl_cmpt_type       = axis_qdma_cpl_ctrl_cmpt_type;
-  assign m_axis_qdma_cpl_ctrl_wait_pld_pkt_id = axis_qdma_cpl_ctrl_wait_pld_pkt_id;
-  assign m_axis_qdma_cpl_ctrl_port_id         = axis_qdma_cpl_ctrl_port_id;
-  assign m_axis_qdma_cpl_ctrl_marker          = axis_qdma_cpl_ctrl_marker;
-  assign m_axis_qdma_cpl_ctrl_user_trig       = axis_qdma_cpl_ctrl_user_trig;
-  assign m_axis_qdma_cpl_ctrl_col_idx         = axis_qdma_cpl_ctrl_col_idx;
-  assign m_axis_qdma_cpl_ctrl_err_idx         = axis_qdma_cpl_ctrl_err_idx;
-  assign m_axis_qdma_cpl_ctrl_no_wrb_marker   = axis_qdma_cpl_ctrl_no_wrb_marker;
-  assign axis_qdma_cpl_tready                 = m_axis_qdma_cpl_tready;
-`endif
 
   generate if (USE_PHYS_FUNC == 0) begin
     // Terminate the AXI-lite interface for QDMA subsystem registers
diff --git a/src/system_config/system_config.sv b/src/system_config/system_config.sv
index b9df77d..917dc39 100644
--- a/src/system_config/system_config.sv
+++ b/src/system_config/system_config.sv
@@ -531,7 +531,10 @@ module system_config #(
      .s_axi_rdata     (axil_smon_rdata),                    
      .s_axi_rresp     (axil_smon_rresp),                    
      .s_axi_rvalid    (axil_smon_rvalid),                    
-     .s_axi_rready    (axil_smon_rready)
+     .s_axi_rready    (axil_smon_rready),
+
+     .vn              (1'b0),
+     .vp              (1'b0)
   );
 
   wire        cms_clk;
@@ -691,6 +694,7 @@ axi_lite_clock_converter axi_clock_conv_cms_inst (
       .m_axi_aresetn (cms_aresetn)
     );
 
+`ifndef __simulation__
 cms_subsystem_wrapper
   cms_subsystem_wrapper_inst (
     .aclk_ctrl_0             (cms_clk),
@@ -751,5 +755,6 @@ cms_subsystem_wrapper
     .satellite_uart_0_rxd    (satellite_uart_0_rxd),
     .satellite_uart_0_txd    (satellite_uart_0_txd)
   );
+`endif
 
 endmodule: system_config
-- 
2.34.1

